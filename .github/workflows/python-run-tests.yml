# This workflow will run Reva daemon on docker, install Python dependencies and run tests against Reva

name: Run tests

on:
  push:
    branches: master
  pull_request:
    branches: '*'

jobs:
  from-file:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        test-files: ['test_authenticator.py', 'test_config_manager.py', 'test_cs3_file_api.py', 'test_cs3_share_api.py', 'test_cs3_user_api.py', 'test_cs3apismanager.py', 'test_locks.py', 'test_uni_share_api.py']
#    env:
#      CS3_REVA_HOST: "sciencemesh.softwaremind.com:443"
#      CS3_SECURE_CHANNEL: "true"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout Reva
      uses: actions/checkout@v3
      with:
        repository: cs3org/reva
        path: reva
    - name: Setup Reva config
      run: |
        mv reva/examples/two-server-setup/groups.demo.json reva/examples/two-server-setup/groups.json 
    - name: Run Reva
      run: docker-compose -f .github/workflows/CI/revad-compose.yml up -d
    - name: Add to hosts
      run: |
        ID=$(docker ps -qf "name=revad")
        sudo -- sh -c "echo '127.0.0.1 $ID' >> /etc/hosts"
    - name: Check Reva
      run: |
        sleep 3
        if docker logs revad 2>&1 | grep error; then docker restart revad; fi
        
        
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        architecture: 'x64'

    - name: Cache venv
      id: cache-venv
      uses: actions/cache@v3
      with:
        path: ./.venv/
        key: venv-${{ hashFiles('setup.py') }}
        restore-keys: |
          venv-

    - name: Create venv
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: python -m venv ./.venv

    - name: Install dependencies
      run: . ./.venv/bin/activate && python -m pip install -e .

    - name: Setup config
      run: |
        cp cs3api4lab/tests/jupyter-config/jupyter_cs3_config.json jupyter-config/jupyter_cs3_config.json
        cp cs3api4lab/tests/jupyter-config/eos_token.txt jupyter-config/eos_token.txt
        cat jupyter-config/jupyter_cs3_config.json

    - name: Run tests
      run: . ./.venv/bin/activate && python -m unittest cs3api4lab/tests/${{ matrix.test-files }}

    - name: Reva logs
      if: success() || failure()
      run: |
        docker ps --no-trunc
        docker logs revad
